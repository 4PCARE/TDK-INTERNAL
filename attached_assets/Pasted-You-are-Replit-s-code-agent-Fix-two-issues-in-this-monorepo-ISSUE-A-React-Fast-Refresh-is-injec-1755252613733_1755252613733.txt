You are Replit’s code agent. Fix two issues in this monorepo:

ISSUE A — React Fast Refresh is injected twice (errors: “inWebWorker/prevRefreshReg/prevRefreshSig already declared”).
ISSUE B — Node dev script uses `--loader ts-node/esm` and crashes with `[Object: null prototype]` on Node 20.

Do the following, in order. Show me each command you run and any diffs you apply.

────────────────────────────────────────────────────────
A) Fix duplicate React Fast Refresh in apps/admin-ui
────────────────────────────────────────────────────────
1) Verify duplicates:
   - Run:
     grep -R --line-number -E "ReactDOM\\.createRoot\\(|ReactDOM\\.render\\(" apps/
     grep -R --line-number -E "react-refresh|@react-refresh|prevRefresh(Reg|Sig)" apps/
     grep -R --line-number -E "/@vite/client" apps/admin-ui/index.html

2) Ensure only one dev client/preamble is loaded:
   - Open apps/admin-ui/index.html and ensure it has exactly ONE module script:
     <script type="module" src="/src/main.tsx"></script>
   - Remove any manual includes of /@vite/client or react-refresh.

3) Ensure the React plugin is added only once (app-level, not root):
   - Root vite.config.*: REMOVE @vitejs/plugin-react and any `react()` usage if present.
   - apps/admin-ui/vite.config.ts: Ensure:
     import react from '@vitejs/plugin-react';
     export default defineConfig({
       resolve: { dedupe: ['react', 'react-dom'] },
       plugins: [react()],
     });
   - If you had to change either file, show the diff.

4) Deduplicate React copies:
   - Run: npm ls react react-dom react-refresh || true
   - If multiple versions are installed, align to the app’s versions. If needed, add
     "overrides" (npm) at the repo root:
     {
       "overrides": { "react": "^18.3.1", "react-dom": "^18.3.1" }
     }
   - Reinstall after overrides.

5) Clean caches and restart admin-ui dev:
   - rm -rf node_modules .vite dist .turbo 2>/dev/null || true
   - npm install
   - npm run dev -w apps/admin-ui  (or the correct workspace script)
   - Confirm the Fast Refresh errors are gone.

────────────────────────────────────────────────────────
B) Replace ts-node/esm loader with tsx in services/agent-svc
────────────────────────────────────────────────────────
1) Open services/agent-svc/package.json and make these changes:
   - Ensure: "type": "module"
   - Add devDependency: "tsx": "^4.19.0" (or latest)
   - Change scripts:
     "dev": "tsx watch src/server.ts"
   - Show diff.

2) Ensure services/agent-svc/tsconfig.json is ESM-friendly. If it exists, set:
   {
     "compilerOptions": {
       "module": "ESNext",
       "moduleResolution": "Bundler",
       "target": "ES2020",
       "esModuleInterop": true,
       "skipLibCheck": true
     }
   }
   If it doesn’t exist, create it. Show diff.

3) Install and run the service:
   - cd services/agent-svc
   - npm install
   - npm run dev
   - Show the startup output. The previous `[Object: null prototype]` crash should be gone.

────────────────────────────────────────────────────────
C) Final verification
────────────────────────────────────────────────────────
- Print the results of these checks:
  1) Exactly one createRoot/render occurrence under apps/admin-ui.
  2) No occurrences of react-refresh or /@vite/client in app code or index.html.
  3) `npm ls react react-dom` shows a single resolved version.
  4) Admin UI runs without the “already been declared” errors.
  5) Agent service runs under `tsx watch` without crashing.

If any step fails, stop and show me the failing command output and the file(s) you think are causing it.